{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\rites\\\\Desktop\\\\Ecommerce-react-django-main\\\\my-app\\\\src\\\\screens\\\\ProfileScreen.js\",\n    _s = $RefreshSig$();\n\nimport React, { useState, useEffect } from \"react\";\nimport { Form, Button, Col, Row, Table } from \"react-bootstrap\";\nimport Loader from \"../components/loader\";\nimport Message from \"../components/message\";\nimport { useDispatch, useSelector } from \"react-redux\";\nimport { getUserDetails, updateUserProfile } from \"../actions/userActions\";\nimport { USER_UPDATE_PROFILE_RESET } from '../constants/userConstants';\nimport { listMyOrders } from '../actions/orderAction';\nimport { LinkContainer } from 'react-router-bootstrap';\nimport { ORDER_LIST_MY_FAIL } from \"../constants/orderConstants\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nfunction ProfileScreen({\n  history\n}) {\n  _s();\n\n  const [name, setName] = useState(\"\");\n  const [email, setEmail] = useState(\"\");\n  const [password, setPassword] = useState(\"\");\n  const [confirmPassword, setConfirmPassword] = useState(\"\");\n  const [message, setMessage] = useState(\"\");\n  const dispatch = useDispatch();\n  const userDetails = useSelector(state => state.userDetails);\n  const {\n    error,\n    loading,\n    user\n  } = userDetails;\n  const userLogin = useSelector(state => state.userLogin);\n  const {\n    userInfo\n  } = userLogin;\n  const userUpdateProfile = useSelector(state => state.userUpdateProfile);\n  const {\n    success\n  } = userUpdateProfile;\n  const orderListMy = useSelector(state => state.orderListMy);\n  const {\n    loading: loadingOrders,\n    error: errorOrders,\n    orders\n  } = orderListMy;\n  useEffect(() => {\n    if (!userInfo) {\n      history.push('/login');\n    } else {\n      if (!user || !user.name || success || userInfo._id !== user._id) {\n        dispatch({\n          type: USER_UPDATE_PROFILE_RESET\n        });\n        dispatch(getUserDetails('profile'));\n        dispatch(listMyOrders());\n      } else {\n        setName(user.name);\n        setEmail(user.email);\n      }\n    }\n  }, [history, userInfo, dispatch, user, success]);\n\n  const submitHandler = e => {\n    e.preventDefault();\n\n    if (password != confirmPassword) {\n      setMessage(\"Passwords do not match\");\n    } else {\n      dispatch(updateUserProfile({\n        'id': user._id,\n        'name': name,\n        'email': email,\n        'password': password\n      }));\n    }\n  };\n\n  return /*#__PURE__*/_jsxDEV(Row, {\n    children: [/*#__PURE__*/_jsxDEV(Col, {\n      md: 3,\n      children: [/*#__PURE__*/_jsxDEV(\"h2\", {\n        children: \"User Profile\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 63,\n        columnNumber: 9\n      }, this), message && /*#__PURE__*/_jsxDEV(Message, {\n        variant: \"danger\",\n        children: message\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 64,\n        columnNumber: 21\n      }, this), error && /*#__PURE__*/_jsxDEV(Message, {\n        variant: \"danger\",\n        children: error\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 65,\n        columnNumber: 16\n      }, this), loading && /*#__PURE__*/_jsxDEV(Loader, {}, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 66,\n        columnNumber: 19\n      }, this), /*#__PURE__*/_jsxDEV(Form, {\n        onSubmit: submitHandler,\n        children: [/*#__PURE__*/_jsxDEV(Form.Group, {\n          controlId: \"name\",\n          children: [/*#__PURE__*/_jsxDEV(Form.Label, {\n            children: \"Name\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 70,\n            columnNumber: 11\n          }, this), /*#__PURE__*/_jsxDEV(Form.Control, {\n            required: true,\n            type: \"name\",\n            placeholder: \"Enter Name\",\n            value: name,\n            onChange: e => setName(e.target.value)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 71,\n            columnNumber: 11\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 69,\n          columnNumber: 7\n        }, this), /*#__PURE__*/_jsxDEV(Form.Group, {\n          controlId: \"email\",\n          children: [/*#__PURE__*/_jsxDEV(Form.Label, {\n            children: \"Email Address\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 81,\n            columnNumber: 11\n          }, this), /*#__PURE__*/_jsxDEV(Form.Control, {\n            required: true,\n            type: \"email\",\n            placeholder: \"Enter Email\",\n            value: email,\n            onChange: e => setEmail(e.target.value)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 82,\n            columnNumber: 11\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 80,\n          columnNumber: 9\n        }, this), /*#__PURE__*/_jsxDEV(Form.Group, {\n          controlId: \"password\",\n          className: \"mt-3\",\n          children: [/*#__PURE__*/_jsxDEV(Form.Label, {\n            children: \"Password\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 92,\n            columnNumber: 11\n          }, this), /*#__PURE__*/_jsxDEV(Form.Control, {\n            type: \"password\",\n            placeholder: \"Enter Password\",\n            value: password,\n            onChange: e => setPassword(e.target.value)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 93,\n            columnNumber: 11\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 91,\n          columnNumber: 9\n        }, this), /*#__PURE__*/_jsxDEV(Form.Group, {\n          controlId: \"passwordConfirm\",\n          className: \"mt-3\",\n          children: [/*#__PURE__*/_jsxDEV(Form.Label, {\n            children: \"Confirm Password\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 103,\n            columnNumber: 11\n          }, this), /*#__PURE__*/_jsxDEV(Form.Control, {\n            type: \"password\",\n            placeholder: \"Confirm Password\",\n            value: confirmPassword,\n            onChange: e => setConfirmPassword(e.target.value)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 104,\n            columnNumber: 11\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 102,\n          columnNumber: 9\n        }, this), /*#__PURE__*/_jsxDEV(Button, {\n          type: \"submit\",\n          variant: \"primary\",\n          className: \"mt-3\",\n          children: \"Update\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 112,\n          columnNumber: 9\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 67,\n        columnNumber: 7\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 62,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(Col, {\n      md: 9,\n      children: [/*#__PURE__*/_jsxDEV(\"h2\", {\n        children: \"My Orders\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 120,\n        columnNumber: 9\n      }, this), loadingOrders ? /*#__PURE__*/_jsxDEV(Loader, {}, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 122,\n        columnNumber: 3\n      }, this) : errorOrders ? /*#__PURE__*/_jsxDEV(Message, {\n        variant: \"danger\",\n        children: errorOrders\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 125,\n        columnNumber: 3\n      }, this) : /*#__PURE__*/_jsxDEV(Table, {\n        striped: true,\n        responsive: true,\n        className: \"table-sm\",\n        children: [/*#__PURE__*/_jsxDEV(\"thead\", {\n          children: /*#__PURE__*/_jsxDEV(\"tr\", {\n            children: [/*#__PURE__*/_jsxDEV(\"th\", {\n              children: \"ID\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 130,\n              columnNumber: 3\n            }, this), /*#__PURE__*/_jsxDEV(\"th\", {\n              children: \"DATE\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 131,\n              columnNumber: 3\n            }, this), /*#__PURE__*/_jsxDEV(\"th\", {\n              children: \"TOTAL\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 132,\n              columnNumber: 3\n            }, this), /*#__PURE__*/_jsxDEV(\"th\", {\n              children: \"PAID\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 133,\n              columnNumber: 3\n            }, this), /*#__PURE__*/_jsxDEV(\"th\", {\n              children: \"DELIVERED\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 134,\n              columnNumber: 3\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 129,\n            columnNumber: 1\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 128,\n          columnNumber: 1\n        }, this), /*#__PURE__*/_jsxDEV(\"tbody\", {\n          children: orders.map(order => /*#__PURE__*/_jsxDEV(\"tr\", {\n            children: [/*#__PURE__*/_jsxDEV(\"td\", {\n              children: order._id\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 140,\n              columnNumber: 7\n            }, this), /*#__PURE__*/_jsxDEV(\"td\", {\n              children: order.createAt.substring(0, 10)\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 141,\n              columnNumber: 7\n            }, this), /*#__PURE__*/_jsxDEV(\"td\", {\n              children: [\"$\", order.totalPrice]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 142,\n              columnNumber: 7\n            }, this), /*#__PURE__*/_jsxDEV(\"td\", {\n              children: order.isPaid ? order.paidAt.substring(0, 10) : /*#__PURE__*/_jsxDEV(\"i\", {\n                className: \"fas fa-times\",\n                style: {\n                  color: 'red'\n                },\n                children: \" \"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 144,\n                columnNumber: 9\n              }, this)\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 143,\n              columnNumber: 7\n            }, this), /*#__PURE__*/_jsxDEV(\"td\", {\n              children: /*#__PURE__*/_jsxDEV(LinkContainer, {\n                to: `/order/${order._id}`,\n                children: /*#__PURE__*/_jsxDEV(Button, {\n                  className: \"btn-btn-sm\",\n                  children: \"Details\"\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 147,\n                  columnNumber: 9\n                }, this)\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 146,\n                columnNumber: 11\n              }, this)\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 146,\n              columnNumber: 7\n            }, this)]\n          }, order._id, true, {\n            fileName: _jsxFileName,\n            lineNumber: 139,\n            columnNumber: 5\n          }, this))\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 137,\n          columnNumber: 1\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 127,\n        columnNumber: 3\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 119,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 61,\n    columnNumber: 5\n  }, this);\n}\n\n_s(ProfileScreen, \"L+Np+fw1r4MZlGp9wVaFh8hZz74=\", false, function () {\n  return [useDispatch, useSelector, useSelector, useSelector, useSelector];\n});\n\n_c = ProfileScreen;\nexport default ProfileScreen;\n\nvar _c;\n\n$RefreshReg$(_c, \"ProfileScreen\");","map":{"version":3,"sources":["C:/Users/rites/Desktop/Ecommerce-react-django-main/my-app/src/screens/ProfileScreen.js"],"names":["React","useState","useEffect","Form","Button","Col","Row","Table","Loader","Message","useDispatch","useSelector","getUserDetails","updateUserProfile","USER_UPDATE_PROFILE_RESET","listMyOrders","LinkContainer","ORDER_LIST_MY_FAIL","ProfileScreen","history","name","setName","email","setEmail","password","setPassword","confirmPassword","setConfirmPassword","message","setMessage","dispatch","userDetails","state","error","loading","user","userLogin","userInfo","userUpdateProfile","success","orderListMy","loadingOrders","errorOrders","orders","push","_id","type","submitHandler","e","preventDefault","target","value","map","order","createAt","substring","totalPrice","isPaid","paidAt","color"],"mappings":"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","sourcesContent":["import React, { useState, useEffect } from \"react\";\r\nimport { Form, Button, Col, Row , Table} from \"react-bootstrap\";\r\nimport Loader from \"../components/loader\";\r\nimport Message from \"../components/message\";\r\nimport { useDispatch, useSelector } from \"react-redux\";\r\nimport { getUserDetails,updateUserProfile } from \"../actions/userActions\";\r\nimport { USER_UPDATE_PROFILE_RESET } from '../constants/userConstants'\r\nimport { listMyOrders } from '../actions/orderAction'\r\nimport { LinkContainer } from 'react-router-bootstrap'\r\nimport { ORDER_LIST_MY_FAIL } from \"../constants/orderConstants\";\r\n\r\nfunction ProfileScreen({ history }) {\r\n  const [name, setName] = useState(\"\");\r\n  const [email, setEmail] = useState(\"\");\r\n  const [password, setPassword] = useState(\"\");\r\n  const [confirmPassword, setConfirmPassword] = useState(\"\");\r\n  const [message, setMessage] = useState(\"\");\r\n\r\n  const dispatch = useDispatch();\r\n  const userDetails = useSelector((state) => state.userDetails);\r\n  const { error, loading, user } = userDetails;\r\n\r\n  const userLogin = useSelector((state) => state.userLogin);\r\n  const { userInfo } = userLogin;\r\n\r\n  const userUpdateProfile = useSelector((state) => state.userUpdateProfile);\r\n  const { success } = userUpdateProfile;\r\n\r\n  const orderListMy = useSelector((state) => state.orderListMy);\r\n  const { loading: loadingOrders, error: errorOrders, orders } = orderListMy\r\n  useEffect(() => {\r\n    if (!userInfo) {\r\n      history.push('/login');\r\n    } else {\r\n      if (!user || !user.name || success || userInfo._id !==user._id ) {\r\n        dispatch({type:USER_UPDATE_PROFILE_RESET})\r\n        dispatch(getUserDetails('profile'));\r\n        dispatch(listMyOrders());\r\n\r\n\r\n      } else {\r\n          setName(user.name)\r\n          setEmail(user.email)\r\n      }\r\n    }\r\n  }, [history, userInfo, dispatch, user, success]);\r\n\r\n  const submitHandler = (e) => {\r\n    e.preventDefault();\r\n    if (password != confirmPassword) {\r\n      setMessage(\"Passwords do not match\");\r\n    } else {\r\n        dispatch(updateUserProfile({'id': user._id,\r\n      'name': name,\r\n      'email': email,\r\n      'password':password\r\n      }))\r\n    }\r\n  };\r\n  return (\r\n    <Row>\r\n      <Col md={3}>\r\n        <h2>User Profile</h2>\r\n        {message && <Message variant='danger'>{message}</Message>}\r\n      {error &&<Message variant='danger'>{error}</Message>}\r\n      {loading && <Loader/>}\r\n      <Form onSubmit={submitHandler}>\r\n\r\n      <Form.Group controlId=\"name\">\r\n          <Form.Label>Name</Form.Label>\r\n          <Form.Control\r\n          required\r\n            type=\"name\"\r\n            placeholder=\"Enter Name\"\r\n            value={name}\r\n            onChange={(e) => setName(e.target.value)}\r\n          ></Form.Control>\r\n        </Form.Group>\r\n\r\n        <Form.Group controlId=\"email\">\r\n          <Form.Label>Email Address</Form.Label>\r\n          <Form.Control\r\n          required\r\n            type=\"email\"\r\n            placeholder=\"Enter Email\"\r\n            value={email}\r\n            onChange={(e) => setEmail(e.target.value)}\r\n          ></Form.Control>\r\n        </Form.Group>\r\n\r\n        <Form.Group controlId=\"password\" className=\"mt-3\">\r\n          <Form.Label>Password</Form.Label>\r\n          <Form.Control\r\n          \r\n            type=\"password\"\r\n            placeholder=\"Enter Password\"\r\n            value={password}\r\n            onChange={(e) => setPassword(e.target.value)}\r\n          ></Form.Control>\r\n        </Form.Group>\r\n\r\n        <Form.Group controlId=\"passwordConfirm\" className=\"mt-3\">\r\n          <Form.Label>Confirm Password</Form.Label>\r\n          <Form.Control\r\n          \r\n            type=\"password\"\r\n            placeholder=\"Confirm Password\"\r\n            value={confirmPassword}\r\n            onChange={(e) => setConfirmPassword(e.target.value)}\r\n          ></Form.Control>\r\n        </Form.Group>\r\n        <Button type=\"submit\" variant=\"primary\" className=\"mt-3\">\r\n          Update\r\n        </Button>\r\n\r\n      </Form>\r\n      </Col>\r\n\r\n      <Col md={9}>\r\n        <h2>My Orders</h2>\r\n{loadingOrders ? (\r\n  <Loader />\r\n\r\n):  errorOrders ? (\r\n  <Message variant = 'danger'>{errorOrders}</Message>\r\n): (\r\n  <Table striped responsive className = 'table-sm'>\r\n<thead>\r\n<tr>\r\n  <th>ID</th>\r\n  <th>DATE</th>\r\n  <th>TOTAL</th>\r\n  <th>PAID</th>\r\n  <th>DELIVERED</th>\r\n</tr>\r\n</thead>\r\n<tbody>\r\n  {orders.map(order => (\r\n    <tr key={order._id}>\r\n      <td>{order._id}</td>\r\n      <td>{order.createAt.substring(0,10)}</td>\r\n      <td>${order.totalPrice}</td>\r\n      <td>{order.isPaid ? order.paidAt.substring(0,10) :(\r\n        <i className= 'fas fa-times' style = {{color:'red'}} > </i>\r\n      ) }</td>\r\n      <td><LinkContainer to = {`/order/${order._id}`}>\r\n        <Button className = 'btn-btn-sm'>Details</Button>\r\n      </LinkContainer></td>\r\n    </tr>\r\n  ))}\r\n</tbody>\r\n  </Table>\r\n)}\r\n      </Col>\r\n    </Row>\r\n  );\r\n}\r\n\r\nexport default ProfileScreen;\r\n"]},"metadata":{},"sourceType":"module"}