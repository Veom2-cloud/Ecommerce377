{"ast":null,"code":"import React, { Component, createRef, useState } from 'react';\n\nfunction ICompress() {\n  return React.createElement(\"svg\", {\n    \"aria-hidden\": \"true\",\n    \"data-rmiz-btn-unzoom-icon\": true,\n    fill: \"currentColor\",\n    focusable: \"false\",\n    viewBox: \"0 0 16 16\",\n    xmlns: \"http://www.w3.org/2000/svg\"\n  }, React.createElement(\"path\", {\n    d: \"M 14.144531 1.148438 L 9 6.292969 L 9 3 L 8 3 L 8 8 L 13 8 L 13 7 L 9.707031 7 L 14.855469 1.851563 Z M 8 8 L 3 8 L 3 9 L 6.292969 9 L 1.148438 14.144531 L 1.851563 14.855469 L 7 9.707031 L 7 13 L 8 13 Z\"\n  }));\n}\n\nfunction IEnlarge() {\n  return React.createElement(\"svg\", {\n    \"aria-hidden\": \"true\",\n    \"data-rmiz-btn-zoom-icon\": true,\n    fill: \"currentColor\",\n    focusable: \"false\",\n    viewBox: \"0 0 16 16\",\n    xmlns: \"http://www.w3.org/2000/svg\"\n  }, React.createElement(\"path\", {\n    d: \"M 9 1 L 9 2 L 12.292969 2 L 2 12.292969 L 2 9 L 1 9 L 1 14 L 6 14 L 6 13 L 2.707031 13 L 13 2.707031 L 13 6 L 14 6 L 14 1 Z\"\n  }));\n}\n\nconst testElType = (type, el) => {\n  var _el$tagName, _el$tagName$toUpperCa;\n\n  return type === (el === null || el === void 0 ? void 0 : (_el$tagName = el.tagName) === null || _el$tagName === void 0 ? void 0 : (_el$tagName$toUpperCa = _el$tagName.toUpperCase) === null || _el$tagName$toUpperCa === void 0 ? void 0 : _el$tagName$toUpperCa.call(_el$tagName));\n};\n\nconst testDiv = el => testElType('DIV', el) || testElType('SPAN', el);\n\nconst testImg = el => testElType('IMG', el);\n\nconst testSvg = el => testElType('SVG', el);\n\nconst getScaleToWindow = ({\n  height,\n  offset,\n  width\n}) => {\n  return Math.min(window.innerWidth / (width + offset), window.innerHeight / (height + offset));\n};\n\nconst getScaleToWindowMax = ({\n  containerHeight,\n  containerWidth,\n  offset,\n  targetHeight,\n  targetWidth\n}) => {\n  const scale = getScaleToWindow({\n    height: targetHeight,\n    offset,\n    width: targetWidth\n  });\n  const ratio = targetWidth > targetHeight ? targetWidth / containerWidth : targetHeight / containerHeight;\n  return scale > 1 ? ratio : scale * ratio;\n};\n\nconst getScale = ({\n  containerHeight,\n  containerWidth,\n  hasScalableSrc,\n  offset,\n  targetHeight,\n  targetWidth\n}) => {\n  return !hasScalableSrc && targetHeight && targetWidth ? getScaleToWindowMax({\n    containerHeight,\n    containerWidth,\n    offset,\n    targetHeight,\n    targetWidth\n  }) : getScaleToWindow({\n    height: containerHeight,\n    offset,\n    width: containerWidth\n  });\n};\n\nconst URL_REGEX = /url(?:\\(['\"]?)(.*?)(?:['\"]?\\))/;\n\nconst getImgSrc = imgEl => {\n  if (imgEl) {\n    if (testImg(imgEl)) {\n      return imgEl.currentSrc;\n    } else if (testDiv(imgEl)) {\n      const bgImg = window.getComputedStyle(imgEl).backgroundImage;\n\n      if (bgImg) {\n        var _URL_REGEX$exec;\n\n        return (_URL_REGEX$exec = URL_REGEX.exec(bgImg)) === null || _URL_REGEX$exec === void 0 ? void 0 : _URL_REGEX$exec[1];\n      }\n    }\n  }\n};\n\nconst getImgAlt = imgEl => {\n  if (imgEl) {\n    if (testImg(imgEl)) {\n      return imgEl.alt ?? undefined;\n    } else {\n      return imgEl.getAttribute('aria-label') ?? undefined;\n    }\n  }\n};\n\nconst getImgRegularStyle = ({\n  containerHeight,\n  containerLeft,\n  containerTop,\n  containerWidth,\n  hasScalableSrc,\n  offset,\n  targetHeight,\n  targetWidth\n}) => {\n  const scale = getScale({\n    containerHeight,\n    containerWidth,\n    hasScalableSrc,\n    offset,\n    targetHeight,\n    targetWidth\n  });\n  return {\n    top: containerTop,\n    left: containerLeft,\n    width: containerWidth * scale,\n    height: containerHeight * scale,\n    transform: `translate(0,0) scale(${1 / scale})`\n  };\n};\n\nconst parsePosition = ({\n  position,\n  relativeNum\n}) => {\n  const positionNum = parseFloat(position);\n  return position.endsWith('%') ? relativeNum * positionNum / 100 : positionNum;\n};\n\nconst getImgObjectFitStyle = ({\n  containerHeight,\n  containerLeft,\n  containerTop,\n  containerWidth,\n  hasScalableSrc,\n  objectFit,\n  objectPosition,\n  offset,\n  targetHeight,\n  targetWidth\n}) => {\n  if (objectFit === 'scale-down') {\n    if (targetWidth <= containerWidth && targetHeight <= containerHeight) {\n      objectFit = 'none';\n    } else {\n      objectFit = 'contain';\n    }\n  }\n\n  if (objectFit === 'cover' || objectFit === 'contain') {\n    const widthRatio = containerWidth / targetWidth;\n    const heightRatio = containerHeight / targetHeight;\n    const ratio = objectFit === 'cover' ? Math.max(widthRatio, heightRatio) : Math.min(widthRatio, heightRatio);\n    const [posLeft = '50%', posTop = '50%'] = objectPosition.split(' ');\n    const posX = parsePosition({\n      position: posLeft,\n      relativeNum: containerWidth - targetWidth * ratio\n    });\n    const posY = parsePosition({\n      position: posTop,\n      relativeNum: containerHeight - targetHeight * ratio\n    });\n    const scale = getScale({\n      containerHeight: targetHeight * ratio,\n      containerWidth: targetWidth * ratio,\n      hasScalableSrc,\n      offset,\n      targetHeight,\n      targetWidth\n    });\n    return {\n      top: containerTop + posY,\n      left: containerLeft + posX,\n      width: targetWidth * ratio * scale,\n      height: targetHeight * ratio * scale,\n      transform: `translate(0,0) scale(${1 / scale})`\n    };\n  } else if (objectFit === 'none') {\n    const [posLeft = '50%', posTop = '50%'] = objectPosition.split(' ');\n    const posX = parsePosition({\n      position: posLeft,\n      relativeNum: containerWidth - targetWidth\n    });\n    const posY = parsePosition({\n      position: posTop,\n      relativeNum: containerHeight - targetHeight\n    });\n    const scale = getScale({\n      containerHeight: targetHeight,\n      containerWidth: targetWidth,\n      hasScalableSrc,\n      offset,\n      targetHeight,\n      targetWidth\n    });\n    return {\n      top: containerTop + posY,\n      left: containerLeft + posX,\n      width: targetWidth * scale,\n      height: targetHeight * scale,\n      transform: `translate(0,0) scale(${1 / scale})`\n    };\n  } else if (objectFit === 'fill') {\n    const widthRatio = containerWidth / targetWidth;\n    const heightRatio = containerHeight / targetHeight;\n    const ratio = Math.max(widthRatio, heightRatio);\n    const scale = getScale({\n      containerHeight: targetHeight * ratio,\n      containerWidth: targetWidth * ratio,\n      hasScalableSrc,\n      offset,\n      targetHeight,\n      targetWidth\n    });\n    return {\n      width: containerWidth * scale,\n      height: containerHeight * scale,\n      transform: `translate(0,0) scale(${1 / scale})`\n    };\n  } else {\n    return {};\n  }\n};\n\nconst getDivImgStyle = ({\n  backgroundPosition,\n  backgroundSize,\n  containerHeight,\n  containerLeft,\n  containerTop,\n  containerWidth,\n  hasScalableSrc,\n  offset,\n  targetHeight,\n  targetWidth\n}) => {\n  if (backgroundSize === 'cover' || backgroundSize === 'contain') {\n    const widthRatio = containerWidth / targetWidth;\n    const heightRatio = containerHeight / targetHeight;\n    const ratio = backgroundSize === 'cover' ? Math.max(widthRatio, heightRatio) : Math.min(widthRatio, heightRatio);\n    const [posLeft = '50%', posTop = '50%'] = backgroundPosition.split(' ');\n    const posX = parsePosition({\n      position: posLeft,\n      relativeNum: containerWidth - targetWidth * ratio\n    });\n    const posY = parsePosition({\n      position: posTop,\n      relativeNum: containerHeight - targetHeight * ratio\n    });\n    const scale = getScale({\n      containerHeight: targetHeight * ratio,\n      containerWidth: targetWidth * ratio,\n      hasScalableSrc,\n      offset,\n      targetHeight,\n      targetWidth\n    });\n    return {\n      top: containerTop + posY,\n      left: containerLeft + posX,\n      width: targetWidth * ratio * scale,\n      height: targetHeight * ratio * scale,\n      transform: `translate(0,0) scale(${1 / scale})`\n    };\n  } else if (backgroundSize === 'auto') {\n    const [posLeft = '50%', posTop = '50%'] = backgroundPosition.split(' ');\n    const posX = parsePosition({\n      position: posLeft,\n      relativeNum: containerWidth - targetWidth\n    });\n    const posY = parsePosition({\n      position: posTop,\n      relativeNum: containerHeight - targetHeight\n    });\n    const scale = getScale({\n      containerHeight: targetHeight,\n      containerWidth: targetWidth,\n      hasScalableSrc,\n      offset,\n      targetHeight,\n      targetWidth\n    });\n    return {\n      top: containerTop + posY,\n      left: containerLeft + posX,\n      width: targetWidth * scale,\n      height: targetHeight * scale,\n      transform: `translate(0,0) scale(${1 / scale})`\n    };\n  } else {\n    const [sizeW = '50%', sizeH = '50%'] = backgroundSize.split(' ');\n    const sizeWidth = parsePosition({\n      position: sizeW,\n      relativeNum: containerWidth\n    });\n    const sizeHeight = parsePosition({\n      position: sizeH,\n      relativeNum: containerHeight\n    });\n    const widthRatio = sizeWidth / targetWidth;\n    const heightRatio = sizeHeight / targetHeight;\n    const ratio = Math.min(widthRatio, heightRatio);\n    const [posLeft = '50%', posTop = '50%'] = backgroundPosition.split(' ');\n    const posX = parsePosition({\n      position: posLeft,\n      relativeNum: containerWidth - targetWidth * ratio\n    });\n    const posY = parsePosition({\n      position: posTop,\n      relativeNum: containerHeight - targetHeight * ratio\n    });\n    const scale = getScale({\n      containerHeight: targetHeight * ratio,\n      containerWidth: targetWidth * ratio,\n      hasScalableSrc,\n      offset,\n      targetHeight,\n      targetWidth\n    });\n    return {\n      top: containerTop + posY,\n      left: containerLeft + posX,\n      width: targetWidth * ratio * scale,\n      height: targetHeight * ratio * scale,\n      transform: `translate(0,0) scale(${1 / scale})`\n    };\n  }\n};\n\nconst SRC_SVG_REGEX = /\\.svg$/i;\n\nconst getStyleModalImg = ({\n  hasZoomImg,\n  imgSrc,\n  isSvg,\n  isZoomed,\n  loadedImgEl,\n  offset,\n  shouldRefresh,\n  targetEl\n}) => {\n  var _imgSrc$slice;\n\n  const hasScalableSrc = isSvg || (imgSrc === null || imgSrc === void 0 ? void 0 : (_imgSrc$slice = imgSrc.slice) === null || _imgSrc$slice === void 0 ? void 0 : _imgSrc$slice.call(imgSrc, 0, 18)) === 'data:image/svg+xml' || hasZoomImg || !!(imgSrc && SRC_SVG_REGEX.test(imgSrc));\n  const imgRect = targetEl.getBoundingClientRect();\n  const targetElComputedStyle = window.getComputedStyle(targetEl);\n  const styleImgRegular = getImgRegularStyle({\n    containerHeight: imgRect.height,\n    containerLeft: imgRect.left,\n    containerTop: imgRect.top,\n    containerWidth: imgRect.width,\n    hasScalableSrc,\n    offset,\n    targetHeight: (loadedImgEl === null || loadedImgEl === void 0 ? void 0 : loadedImgEl.naturalHeight) ?? imgRect.height,\n    targetWidth: (loadedImgEl === null || loadedImgEl === void 0 ? void 0 : loadedImgEl.naturalWidth) ?? imgRect.width\n  });\n  const styleImgObjectFit = loadedImgEl && targetElComputedStyle.objectFit ? getImgObjectFitStyle({\n    containerHeight: imgRect.height,\n    containerLeft: imgRect.left,\n    containerTop: imgRect.top,\n    containerWidth: imgRect.width,\n    hasScalableSrc,\n    objectFit: targetElComputedStyle.objectFit,\n    objectPosition: targetElComputedStyle.objectPosition,\n    offset,\n    targetHeight: loadedImgEl.naturalHeight,\n    targetWidth: loadedImgEl.naturalWidth\n  }) : undefined;\n  const styleDivImg = loadedImgEl && testDiv(targetEl) ? getDivImgStyle({\n    backgroundPosition: targetElComputedStyle.backgroundPosition,\n    backgroundSize: targetElComputedStyle.backgroundSize,\n    containerHeight: imgRect.height,\n    containerLeft: imgRect.left,\n    containerTop: imgRect.top,\n    containerWidth: imgRect.width,\n    hasScalableSrc,\n    offset,\n    targetHeight: loadedImgEl.naturalHeight,\n    targetWidth: loadedImgEl.naturalWidth\n  }) : undefined;\n  const style = Object.assign({}, styleImgRegular, styleImgObjectFit, styleDivImg);\n\n  if (isZoomed) {\n    const viewportX = window.innerWidth / 2;\n    const viewportY = window.innerHeight / 2;\n    const childCenterX = parseFloat(String(style.left || 0)) + parseFloat(String(style.width || 0)) / 2;\n    const childCenterY = parseFloat(String(style.top || 0)) + parseFloat(String(style.height || 0)) / 2;\n    const translateX = viewportX - childCenterX;\n    const translateY = viewportY - childCenterY;\n\n    if (shouldRefresh) {\n      style.transitionDuration = '0.01ms';\n    }\n\n    style.transform = `translate(${translateX}px,${translateY}px) scale(1)`;\n  }\n\n  return style;\n};\n\nconst getStyleGhost = imgEl => {\n  if (!imgEl) {\n    return {};\n  }\n\n  if (testSvg(imgEl)) {\n    var _parentEl$getBounding;\n\n    const parentEl = imgEl.parentNode;\n    const parentRect = parentEl === null || parentEl === void 0 ? void 0 : (_parentEl$getBounding = parentEl.getBoundingClientRect) === null || _parentEl$getBounding === void 0 ? void 0 : _parentEl$getBounding.call(parentEl);\n    const rect = imgEl.getBoundingClientRect();\n    return {\n      height: rect.height,\n      left: parentRect.left - rect.left,\n      width: rect.width,\n      top: parentRect.top - rect.top\n    };\n  } else {\n    return {\n      height: imgEl.offsetHeight,\n      left: imgEl.offsetLeft,\n      width: imgEl.offsetWidth,\n      top: imgEl.offsetTop\n    };\n  }\n};\n\nfunction Controlled(props) {\n  return React.createElement(ControlledBase, { ...props\n  });\n}\n\nclass ControlledBase extends Component {\n  static defaultProps = {\n    a11yNameButtonUnzoom: 'Minimize image',\n    a11yNameButtonZoom: 'Expand image',\n    IconUnzoom: ICompress,\n    IconZoom: IEnlarge,\n    zoomMargin: 0\n  };\n  state = {\n    id: '',\n    isZoomImgLoaded: false,\n    loadedImgEl: undefined,\n    modalState: 2,\n    shouldRefresh: false\n  };\n  refContent = createRef();\n  refDialog = createRef();\n  refModalImg = createRef();\n  refWrap = createRef();\n  changeObserver;\n  imgEl = null;\n  imgElObserver;\n  styleModalImg = {};\n\n  render() {\n    const {\n      handleDialogKeyDown,\n      handleUnzoom,\n      handleZoom,\n      imgEl,\n      props: {\n        a11yNameButtonUnzoom,\n        a11yNameButtonZoom,\n        children,\n        IconUnzoom,\n        IconZoom,\n        isZoomed,\n        zoomImg,\n        zoomMargin\n      },\n      refContent,\n      refDialog,\n      refModalImg,\n      refWrap,\n      state: {\n        id,\n        isZoomImgLoaded,\n        loadedImgEl,\n        modalState,\n        shouldRefresh\n      }\n    } = this;\n    const idModalImg = `rmiz-modal-img-${id}`;\n    const isDiv = testDiv(imgEl);\n    const isImg = testImg(imgEl);\n    const isSvg = testSvg(imgEl);\n    const imgAlt = getImgAlt(imgEl);\n    const imgSrc = getImgSrc(imgEl);\n    const imgSizes = isImg ? imgEl.sizes : undefined;\n    const imgSrcSet = isImg ? imgEl.srcset : undefined;\n    const hasZoomImg = !!(zoomImg === null || zoomImg === void 0 ? void 0 : zoomImg.src);\n    const hasImage = imgEl && (loadedImgEl || isSvg);\n    const labelBtnZoom = imgAlt ? `${a11yNameButtonZoom}: ${imgAlt}` : a11yNameButtonZoom;\n    const isModalActive = modalState === 1 || modalState === 0;\n    const dataContentState = hasImage ? 'found' : 'not-found';\n    const dataOverlayState = modalState === 2 || modalState === 3 ? 'hidden' : 'visible';\n    const styleContent = {\n      visibility: modalState === 2 ? 'visible' : 'hidden'\n    };\n    const styleGhost = getStyleGhost(imgEl);\n    this.styleModalImg = hasImage ? getStyleModalImg({\n      hasZoomImg,\n      imgSrc,\n      isSvg,\n      isZoomed: isZoomed && isModalActive,\n      loadedImgEl,\n      offset: zoomMargin,\n      shouldRefresh,\n      targetEl: imgEl\n    }) : {};\n    return React.createElement(\"div\", {\n      \"data-rmiz\": \"\",\n      ref: refWrap\n    }, React.createElement(\"div\", {\n      \"data-rmiz-content\": dataContentState,\n      ref: refContent,\n      style: styleContent\n    }, children), hasImage && React.createElement(\"div\", {\n      \"data-rmiz-ghost\": \"\",\n      style: styleGhost\n    }, React.createElement(\"button\", {\n      \"aria-label\": labelBtnZoom,\n      \"data-rmiz-btn-zoom\": \"\",\n      onClick: handleZoom,\n      type: \"button\"\n    }, React.createElement(IconZoom, null))), hasImage && React.createElement(\"dialog\", {\n      \"aria-labelledby\": idModalImg,\n      \"aria-modal\": \"true\",\n      \"data-rmiz-modal\": \"\",\n      ref: refDialog,\n      onClick: handleUnzoom,\n      onClose: handleUnzoom,\n      onKeyDown: handleDialogKeyDown,\n      role: \"dialog\"\n    }, React.createElement(\"div\", {\n      \"data-rmiz-modal-overlay\": dataOverlayState\n    }), React.createElement(\"div\", {\n      \"data-rmiz-modal-content\": \"\"\n    }, (isImg || isDiv) && React.createElement(\"img\", {\n      alt: imgAlt,\n      sizes: imgSizes,\n      src: imgSrc,\n      srcSet: imgSrcSet,\n      ...(isZoomImgLoaded && modalState === 0 ? zoomImg : {}),\n      \"data-rmiz-modal-img\": \"\",\n      height: this.styleModalImg.height,\n      id: idModalImg,\n      ref: refModalImg,\n      style: this.styleModalImg,\n      width: this.styleModalImg.width\n    }), isSvg && React.createElement(\"div\", {\n      \"data-rmiz-modal-img\": \"\",\n      ref: refModalImg,\n      style: this.styleModalImg\n    }), React.createElement(\"button\", {\n      \"aria-label\": a11yNameButtonUnzoom,\n      \"data-rmiz-btn-unzoom\": \"\",\n      onClick: handleUnzoom,\n      type: \"button\"\n    }, React.createElement(IconUnzoom, null)))));\n  }\n\n  componentDidMount() {\n    this.setId();\n    this.setAndTrackImg();\n    this.handleImgLoad();\n    this.UNSAFE_handleSvg();\n  }\n\n  componentWillUnmount() {\n    var _this$changeObserver, _this$changeObserver$, _this$imgElObserver, _this$imgElObserver$d, _this$imgEl, _this$imgEl$removeEve, _this$imgEl2, _this$imgEl2$removeEv;\n\n    (_this$changeObserver = this.changeObserver) === null || _this$changeObserver === void 0 ? void 0 : (_this$changeObserver$ = _this$changeObserver.disconnect) === null || _this$changeObserver$ === void 0 ? void 0 : _this$changeObserver$.call(_this$changeObserver);\n    (_this$imgElObserver = this.imgElObserver) === null || _this$imgElObserver === void 0 ? void 0 : (_this$imgElObserver$d = _this$imgElObserver.disconnect) === null || _this$imgElObserver$d === void 0 ? void 0 : _this$imgElObserver$d.call(_this$imgElObserver);\n    (_this$imgEl = this.imgEl) === null || _this$imgEl === void 0 ? void 0 : (_this$imgEl$removeEve = _this$imgEl.removeEventListener) === null || _this$imgEl$removeEve === void 0 ? void 0 : _this$imgEl$removeEve.call(_this$imgEl, 'load', this.handleImgLoad);\n    (_this$imgEl2 = this.imgEl) === null || _this$imgEl2 === void 0 ? void 0 : (_this$imgEl2$removeEv = _this$imgEl2.removeEventListener) === null || _this$imgEl2$removeEv === void 0 ? void 0 : _this$imgEl2$removeEv.call(_this$imgEl2, 'click', this.handleZoom);\n    window.removeEventListener('resize', this.handleResize);\n    window.removeEventListener('scroll', this.handleScroll);\n  }\n\n  componentDidUpdate(prevProps) {\n    this.UNSAFE_handleSvg();\n    this.handleIfZoomChanged(prevProps.isZoomed);\n  }\n\n  setId = () => {\n    const gen4 = () => Math.random().toString(16).slice(-4);\n\n    this.setState({\n      id: gen4() + gen4() + gen4()\n    });\n  };\n  setAndTrackImg = () => {\n    const contentEl = this.refContent.current;\n    if (!contentEl) return;\n    this.imgEl = contentEl.querySelector(':is(img, svg, [role=\"img\"], [data-zoom]):not([aria-hidden=\"true\"])');\n\n    if (this.imgEl) {\n      var _this$changeObserver2, _this$changeObserver3, _this$imgEl3, _this$imgEl3$addEvent, _this$imgEl4, _this$imgEl4$addEvent;\n\n      (_this$changeObserver2 = this.changeObserver) === null || _this$changeObserver2 === void 0 ? void 0 : (_this$changeObserver3 = _this$changeObserver2.disconnect) === null || _this$changeObserver3 === void 0 ? void 0 : _this$changeObserver3.call(_this$changeObserver2);\n      (_this$imgEl3 = this.imgEl) === null || _this$imgEl3 === void 0 ? void 0 : (_this$imgEl3$addEvent = _this$imgEl3.addEventListener) === null || _this$imgEl3$addEvent === void 0 ? void 0 : _this$imgEl3$addEvent.call(_this$imgEl3, 'load', this.handleImgLoad);\n      (_this$imgEl4 = this.imgEl) === null || _this$imgEl4 === void 0 ? void 0 : (_this$imgEl4$addEvent = _this$imgEl4.addEventListener) === null || _this$imgEl4$addEvent === void 0 ? void 0 : _this$imgEl4$addEvent.call(_this$imgEl4, 'click', this.handleZoom);\n\n      if (!this.state.loadedImgEl) {\n        this.handleImgLoad();\n      }\n\n      this.imgElObserver = new ResizeObserver(entries => {\n        const entry = entries[0];\n\n        if (entry === null || entry === void 0 ? void 0 : entry.target) {\n          this.imgEl = entry.target;\n          this.setState({});\n        }\n      });\n      this.imgElObserver.observe(this.imgEl);\n    } else if (!this.changeObserver) {\n      this.changeObserver = new MutationObserver(this.setAndTrackImg);\n      this.changeObserver.observe(contentEl, {\n        childList: true,\n        subtree: true\n      });\n    }\n  };\n  handleIfZoomChanged = prevIsZoomed => {\n    const {\n      isZoomed\n    } = this.props;\n\n    if (!prevIsZoomed && isZoomed) {\n      this.zoom();\n    } else if (prevIsZoomed && !isZoomed) {\n      this.unzoom();\n    }\n  };\n  handleImgLoad = () => {\n    const {\n      imgEl\n    } = this;\n    const imgSrc = getImgSrc(imgEl);\n    if (!imgSrc) return;\n    const img = new Image();\n\n    if (testImg(imgEl)) {\n      img.sizes = imgEl.sizes;\n      img.srcset = imgEl.srcset;\n    }\n\n    img.src = imgSrc;\n\n    const setLoaded = () => {\n      this.setState({\n        loadedImgEl: img\n      });\n    };\n\n    img.decode().then(setLoaded).catch(() => {\n      img.onload = setLoaded;\n    });\n  };\n  handleZoom = () => {\n    var _this$props$onZoomCha, _this$props;\n\n    (_this$props$onZoomCha = (_this$props = this.props).onZoomChange) === null || _this$props$onZoomCha === void 0 ? void 0 : _this$props$onZoomCha.call(_this$props, true);\n  };\n  handleUnzoom = () => {\n    var _this$props$onZoomCha2, _this$props2;\n\n    (_this$props$onZoomCha2 = (_this$props2 = this.props).onZoomChange) === null || _this$props$onZoomCha2 === void 0 ? void 0 : _this$props$onZoomCha2.call(_this$props2, false);\n  };\n  handleDialogKeyDown = e => {\n    if (e.key === 'Escape' || e.keyCode === 27) {\n      e.preventDefault();\n      e.stopPropagation();\n      this.handleUnzoom();\n    }\n  };\n  handleScroll = () => {\n    this.setState({\n      shouldRefresh: true\n    });\n    this.handleUnzoom();\n  };\n  handleResize = () => {\n    this.setState({\n      shouldRefresh: true\n    });\n  };\n  zoom = () => {\n    var _refDialog$current, _refDialog$current$sh, _refModalImg$current, _refModalImg$current$;\n\n    const {\n      handleResize,\n      handleScroll,\n      loadZoomImg,\n      props: {\n        scrollableEl = window\n      },\n      refDialog,\n      refModalImg\n    } = this;\n    (_refDialog$current = refDialog.current) === null || _refDialog$current === void 0 ? void 0 : (_refDialog$current$sh = _refDialog$current.showModal) === null || _refDialog$current$sh === void 0 ? void 0 : _refDialog$current$sh.call(_refDialog$current);\n    this.setState({\n      modalState: 1\n    });\n    loadZoomImg();\n    (_refModalImg$current = refModalImg.current) === null || _refModalImg$current === void 0 ? void 0 : (_refModalImg$current$ = _refModalImg$current.addEventListener) === null || _refModalImg$current$ === void 0 ? void 0 : _refModalImg$current$.call(_refModalImg$current, 'transitionend', () => {\n      setTimeout(() => {\n        this.setState({\n          modalState: 0\n        });\n        scrollableEl.addEventListener('scroll', handleScroll);\n        window.addEventListener('resize', handleResize);\n      }, 0);\n    }, {\n      once: true\n    });\n  };\n  unzoom = () => {\n    var _refModalImg$current2, _refModalImg$current3;\n\n    const {\n      handleResize,\n      handleScroll,\n      refDialog,\n      refModalImg,\n      props: {\n        scrollableEl = window\n      }\n    } = this;\n    this.setState({\n      modalState: 3\n    });\n    (_refModalImg$current2 = refModalImg.current) === null || _refModalImg$current2 === void 0 ? void 0 : (_refModalImg$current3 = _refModalImg$current2.addEventListener) === null || _refModalImg$current3 === void 0 ? void 0 : _refModalImg$current3.call(_refModalImg$current2, 'transitionend', () => {\n      setTimeout(() => {\n        var _refDialog$current2, _refDialog$current2$c;\n\n        window.removeEventListener('resize', handleResize);\n        scrollableEl.removeEventListener('scroll', handleScroll);\n        this.setState({\n          shouldRefresh: false,\n          modalState: 2\n        });\n        (_refDialog$current2 = refDialog.current) === null || _refDialog$current2 === void 0 ? void 0 : (_refDialog$current2$c = _refDialog$current2.close) === null || _refDialog$current2$c === void 0 ? void 0 : _refDialog$current2$c.call(_refDialog$current2);\n      }, 0);\n    }, {\n      once: true\n    });\n  };\n  loadZoomImg = () => {\n    const {\n      props: {\n        zoomImg\n      }\n    } = this;\n    const zoomImgSrc = zoomImg === null || zoomImg === void 0 ? void 0 : zoomImg.src;\n\n    if (zoomImgSrc) {\n      const img = new Image();\n      img.sizes = (zoomImg === null || zoomImg === void 0 ? void 0 : zoomImg.sizes) ?? '';\n      img.srcset = (zoomImg === null || zoomImg === void 0 ? void 0 : zoomImg.srcSet) ?? '';\n      img.src = zoomImgSrc;\n\n      const setLoaded = () => {\n        this.setState({\n          isZoomImgLoaded: true\n        });\n      };\n\n      img.decode().then(setLoaded).catch(() => {\n        img.onload = setLoaded;\n      });\n    }\n  };\n  UNSAFE_handleSvg = () => {\n    const {\n      imgEl,\n      refModalImg,\n      styleModalImg\n    } = this;\n\n    if (testSvg(imgEl)) {\n      var _refModalImg$current4, _refModalImg$current5, _refModalImg$current6, _refModalImg$current7, _refModalImg$current8;\n\n      const tmp = document.createElement('div');\n      tmp.innerHTML = imgEl.outerHTML;\n      const svg = tmp.firstChild;\n      svg.style.width = `${styleModalImg.width ?? 0}px`;\n      svg.style.height = `${styleModalImg.height ?? 0}px`;\n      (_refModalImg$current4 = refModalImg.current) === null || _refModalImg$current4 === void 0 ? void 0 : (_refModalImg$current5 = _refModalImg$current4.firstChild) === null || _refModalImg$current5 === void 0 ? void 0 : (_refModalImg$current6 = _refModalImg$current5.remove) === null || _refModalImg$current6 === void 0 ? void 0 : _refModalImg$current6.call(_refModalImg$current5);\n      (_refModalImg$current7 = refModalImg.current) === null || _refModalImg$current7 === void 0 ? void 0 : (_refModalImg$current8 = _refModalImg$current7.appendChild) === null || _refModalImg$current8 === void 0 ? void 0 : _refModalImg$current8.call(_refModalImg$current7, svg);\n    }\n  };\n}\n\nfunction Uncontrolled(props) {\n  const [isZoomed, setIsZoomed] = useState(false);\n  return React.createElement(Controlled, { ...props,\n    isZoomed: isZoomed,\n    onZoomChange: setIsZoomed\n  });\n}\n\nexport { Controlled, Uncontrolled as default };","map":{"version":3,"sources":["C:/Users/rites/Desktop/Ecommerce-react-django-main/my-app/node_modules/react-medium-image-zoom/dist/index.js"],"names":["React","Component","createRef","useState","ICompress","createElement","fill","focusable","viewBox","xmlns","d","IEnlarge","testElType","type","el","tagName","toUpperCase","testDiv","testImg","testSvg","getScaleToWindow","height","offset","width","Math","min","window","innerWidth","innerHeight","getScaleToWindowMax","containerHeight","containerWidth","targetHeight","targetWidth","scale","ratio","getScale","hasScalableSrc","URL_REGEX","getImgSrc","imgEl","currentSrc","bgImg","getComputedStyle","backgroundImage","exec","getImgAlt","alt","undefined","getAttribute","getImgRegularStyle","containerLeft","containerTop","top","left","transform","parsePosition","position","relativeNum","positionNum","parseFloat","endsWith","getImgObjectFitStyle","objectFit","objectPosition","widthRatio","heightRatio","max","posLeft","posTop","split","posX","posY","getDivImgStyle","backgroundPosition","backgroundSize","sizeW","sizeH","sizeWidth","sizeHeight","SRC_SVG_REGEX","getStyleModalImg","hasZoomImg","imgSrc","isSvg","isZoomed","loadedImgEl","shouldRefresh","targetEl","slice","test","imgRect","getBoundingClientRect","targetElComputedStyle","styleImgRegular","naturalHeight","naturalWidth","styleImgObjectFit","styleDivImg","style","Object","assign","viewportX","viewportY","childCenterX","String","childCenterY","translateX","translateY","transitionDuration","getStyleGhost","parentEl","parentNode","parentRect","rect","offsetHeight","offsetLeft","offsetWidth","offsetTop","Controlled","props","ControlledBase","defaultProps","a11yNameButtonUnzoom","a11yNameButtonZoom","IconUnzoom","IconZoom","zoomMargin","state","id","isZoomImgLoaded","modalState","refContent","refDialog","refModalImg","refWrap","changeObserver","imgElObserver","styleModalImg","render","handleDialogKeyDown","handleUnzoom","handleZoom","children","zoomImg","idModalImg","isDiv","isImg","imgAlt","imgSizes","sizes","imgSrcSet","srcset","src","hasImage","labelBtnZoom","isModalActive","dataContentState","dataOverlayState","styleContent","visibility","styleGhost","ref","onClick","onClose","onKeyDown","role","srcSet","componentDidMount","setId","setAndTrackImg","handleImgLoad","UNSAFE_handleSvg","componentWillUnmount","disconnect","removeEventListener","handleResize","handleScroll","componentDidUpdate","prevProps","handleIfZoomChanged","gen4","random","toString","setState","contentEl","current","querySelector","addEventListener","ResizeObserver","entries","entry","target","observe","MutationObserver","childList","subtree","prevIsZoomed","zoom","unzoom","img","Image","setLoaded","decode","then","catch","onload","onZoomChange","e","key","keyCode","preventDefault","stopPropagation","loadZoomImg","scrollableEl","showModal","setTimeout","once","close","zoomImgSrc","tmp","document","innerHTML","outerHTML","svg","firstChild","remove","appendChild","Uncontrolled","setIsZoomed","default"],"mappings":"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","sourcesContent":["import React, { Component, createRef, useState } from 'react';\n\nfunction ICompress() {\n    return (React.createElement(\"svg\", { \"aria-hidden\": \"true\", \"data-rmiz-btn-unzoom-icon\": true, fill: \"currentColor\", focusable: \"false\", viewBox: \"0 0 16 16\", xmlns: \"http://www.w3.org/2000/svg\" },\n        React.createElement(\"path\", { d: \"M 14.144531 1.148438 L 9 6.292969 L 9 3 L 8 3 L 8 8 L 13 8 L 13 7 L 9.707031 7 L 14.855469 1.851563 Z M 8 8 L 3 8 L 3 9 L 6.292969 9 L 1.148438 14.144531 L 1.851563 14.855469 L 7 9.707031 L 7 13 L 8 13 Z\" })));\n}\nfunction IEnlarge() {\n    return (React.createElement(\"svg\", { \"aria-hidden\": \"true\", \"data-rmiz-btn-zoom-icon\": true, fill: \"currentColor\", focusable: \"false\", viewBox: \"0 0 16 16\", xmlns: \"http://www.w3.org/2000/svg\" },\n        React.createElement(\"path\", { d: \"M 9 1 L 9 2 L 12.292969 2 L 2 12.292969 L 2 9 L 1 9 L 1 14 L 6 14 L 6 13 L 2.707031 13 L 13 2.707031 L 13 6 L 14 6 L 14 1 Z\" })));\n}\n\nconst testElType = (type, el) => type === el?.tagName?.toUpperCase?.();\nconst testDiv = (el) => testElType('DIV', el) || testElType('SPAN', el);\nconst testImg = (el) => testElType('IMG', el);\nconst testSvg = (el) => testElType('SVG', el);\nconst getScaleToWindow = ({ height, offset, width }) => {\n    return Math.min(window.innerWidth / (width + offset), window.innerHeight / (height + offset));\n};\nconst getScaleToWindowMax = ({ containerHeight, containerWidth, offset, targetHeight, targetWidth, }) => {\n    const scale = getScaleToWindow({\n        height: targetHeight,\n        offset,\n        width: targetWidth,\n    });\n    const ratio = targetWidth > targetHeight\n        ? targetWidth / containerWidth\n        : targetHeight / containerHeight;\n    return scale > 1 ? ratio : scale * ratio;\n};\nconst getScale = ({ containerHeight, containerWidth, hasScalableSrc, offset, targetHeight, targetWidth, }) => {\n    return !hasScalableSrc && targetHeight && targetWidth\n        ? getScaleToWindowMax({\n            containerHeight,\n            containerWidth,\n            offset,\n            targetHeight,\n            targetWidth,\n        })\n        : getScaleToWindow({\n            height: containerHeight,\n            offset,\n            width: containerWidth,\n        });\n};\nconst URL_REGEX = /url(?:\\(['\"]?)(.*?)(?:['\"]?\\))/;\nconst getImgSrc = (imgEl) => {\n    if (imgEl) {\n        if (testImg(imgEl)) {\n            return imgEl.currentSrc;\n        }\n        else if (testDiv(imgEl)) {\n            const bgImg = window.getComputedStyle(imgEl).backgroundImage;\n            if (bgImg) {\n                return URL_REGEX.exec(bgImg)?.[1];\n            }\n        }\n    }\n};\nconst getImgAlt = (imgEl) => {\n    if (imgEl) {\n        if (testImg(imgEl)) {\n            return imgEl.alt ?? undefined;\n        }\n        else {\n            return imgEl.getAttribute('aria-label') ?? undefined;\n        }\n    }\n};\nconst getImgRegularStyle = ({ containerHeight, containerLeft, containerTop, containerWidth, hasScalableSrc, offset, targetHeight, targetWidth, }) => {\n    const scale = getScale({\n        containerHeight,\n        containerWidth,\n        hasScalableSrc,\n        offset,\n        targetHeight,\n        targetWidth,\n    });\n    return {\n        top: containerTop,\n        left: containerLeft,\n        width: containerWidth * scale,\n        height: containerHeight * scale,\n        transform: `translate(0,0) scale(${1 / scale})`,\n    };\n};\nconst parsePosition = ({ position, relativeNum }) => {\n    const positionNum = parseFloat(position);\n    return position.endsWith('%')\n        ? relativeNum * positionNum / 100\n        : positionNum;\n};\nconst getImgObjectFitStyle = ({ containerHeight, containerLeft, containerTop, containerWidth, hasScalableSrc, objectFit, objectPosition, offset, targetHeight, targetWidth, }) => {\n    if (objectFit === 'scale-down') {\n        if (targetWidth <= containerWidth && targetHeight <= containerHeight) {\n            objectFit = 'none';\n        }\n        else {\n            objectFit = 'contain';\n        }\n    }\n    if (objectFit === 'cover' || objectFit === 'contain') {\n        const widthRatio = containerWidth / targetWidth;\n        const heightRatio = containerHeight / targetHeight;\n        const ratio = objectFit === 'cover'\n            ? Math.max(widthRatio, heightRatio)\n            : Math.min(widthRatio, heightRatio);\n        const [posLeft = '50%', posTop = '50%'] = objectPosition.split(' ');\n        const posX = parsePosition({ position: posLeft, relativeNum: containerWidth - targetWidth * ratio });\n        const posY = parsePosition({ position: posTop, relativeNum: containerHeight - targetHeight * ratio });\n        const scale = getScale({\n            containerHeight: targetHeight * ratio,\n            containerWidth: targetWidth * ratio,\n            hasScalableSrc,\n            offset,\n            targetHeight,\n            targetWidth,\n        });\n        return {\n            top: containerTop + posY,\n            left: containerLeft + posX,\n            width: targetWidth * ratio * scale,\n            height: targetHeight * ratio * scale,\n            transform: `translate(0,0) scale(${1 / scale})`,\n        };\n    }\n    else if (objectFit === 'none') {\n        const [posLeft = '50%', posTop = '50%'] = objectPosition.split(' ');\n        const posX = parsePosition({ position: posLeft, relativeNum: containerWidth - targetWidth });\n        const posY = parsePosition({ position: posTop, relativeNum: containerHeight - targetHeight });\n        const scale = getScale({\n            containerHeight: targetHeight,\n            containerWidth: targetWidth,\n            hasScalableSrc,\n            offset,\n            targetHeight,\n            targetWidth,\n        });\n        return {\n            top: containerTop + posY,\n            left: containerLeft + posX,\n            width: targetWidth * scale,\n            height: targetHeight * scale,\n            transform: `translate(0,0) scale(${1 / scale})`,\n        };\n    }\n    else if (objectFit === 'fill') {\n        const widthRatio = containerWidth / targetWidth;\n        const heightRatio = containerHeight / targetHeight;\n        const ratio = Math.max(widthRatio, heightRatio);\n        const scale = getScale({\n            containerHeight: targetHeight * ratio,\n            containerWidth: targetWidth * ratio,\n            hasScalableSrc,\n            offset,\n            targetHeight,\n            targetWidth,\n        });\n        return {\n            width: containerWidth * scale,\n            height: containerHeight * scale,\n            transform: `translate(0,0) scale(${1 / scale})`,\n        };\n    }\n    else {\n        return {};\n    }\n};\nconst getDivImgStyle = ({ backgroundPosition, backgroundSize, containerHeight, containerLeft, containerTop, containerWidth, hasScalableSrc, offset, targetHeight, targetWidth, }) => {\n    if (backgroundSize === 'cover' || backgroundSize === 'contain') {\n        const widthRatio = containerWidth / targetWidth;\n        const heightRatio = containerHeight / targetHeight;\n        const ratio = backgroundSize === 'cover'\n            ? Math.max(widthRatio, heightRatio)\n            : Math.min(widthRatio, heightRatio);\n        const [posLeft = '50%', posTop = '50%'] = backgroundPosition.split(' ');\n        const posX = parsePosition({ position: posLeft, relativeNum: containerWidth - targetWidth * ratio });\n        const posY = parsePosition({ position: posTop, relativeNum: containerHeight - targetHeight * ratio });\n        const scale = getScale({\n            containerHeight: targetHeight * ratio,\n            containerWidth: targetWidth * ratio,\n            hasScalableSrc,\n            offset,\n            targetHeight,\n            targetWidth,\n        });\n        return {\n            top: containerTop + posY,\n            left: containerLeft + posX,\n            width: targetWidth * ratio * scale,\n            height: targetHeight * ratio * scale,\n            transform: `translate(0,0) scale(${1 / scale})`,\n        };\n    }\n    else if (backgroundSize === 'auto') {\n        const [posLeft = '50%', posTop = '50%'] = backgroundPosition.split(' ');\n        const posX = parsePosition({ position: posLeft, relativeNum: containerWidth - targetWidth });\n        const posY = parsePosition({ position: posTop, relativeNum: containerHeight - targetHeight });\n        const scale = getScale({\n            containerHeight: targetHeight,\n            containerWidth: targetWidth,\n            hasScalableSrc,\n            offset,\n            targetHeight,\n            targetWidth,\n        });\n        return {\n            top: containerTop + posY,\n            left: containerLeft + posX,\n            width: targetWidth * scale,\n            height: targetHeight * scale,\n            transform: `translate(0,0) scale(${1 / scale})`,\n        };\n    }\n    else {\n        const [sizeW = '50%', sizeH = '50%'] = backgroundSize.split(' ');\n        const sizeWidth = parsePosition({ position: sizeW, relativeNum: containerWidth });\n        const sizeHeight = parsePosition({ position: sizeH, relativeNum: containerHeight });\n        const widthRatio = sizeWidth / targetWidth;\n        const heightRatio = sizeHeight / targetHeight;\n        const ratio = Math.min(widthRatio, heightRatio);\n        const [posLeft = '50%', posTop = '50%'] = backgroundPosition.split(' ');\n        const posX = parsePosition({ position: posLeft, relativeNum: containerWidth - targetWidth * ratio });\n        const posY = parsePosition({ position: posTop, relativeNum: containerHeight - targetHeight * ratio });\n        const scale = getScale({\n            containerHeight: targetHeight * ratio,\n            containerWidth: targetWidth * ratio,\n            hasScalableSrc,\n            offset,\n            targetHeight,\n            targetWidth,\n        });\n        return {\n            top: containerTop + posY,\n            left: containerLeft + posX,\n            width: targetWidth * ratio * scale,\n            height: targetHeight * ratio * scale,\n            transform: `translate(0,0) scale(${1 / scale})`,\n        };\n    }\n};\nconst SRC_SVG_REGEX = /\\.svg$/i;\nconst getStyleModalImg = ({ hasZoomImg, imgSrc, isSvg, isZoomed, loadedImgEl, offset, shouldRefresh, targetEl, }) => {\n    const hasScalableSrc = isSvg ||\n        imgSrc?.slice?.(0, 18) === 'data:image/svg+xml' ||\n        hasZoomImg ||\n        !!(imgSrc && SRC_SVG_REGEX.test(imgSrc));\n    const imgRect = targetEl.getBoundingClientRect();\n    const targetElComputedStyle = window.getComputedStyle(targetEl);\n    const styleImgRegular = getImgRegularStyle({\n        containerHeight: imgRect.height,\n        containerLeft: imgRect.left,\n        containerTop: imgRect.top,\n        containerWidth: imgRect.width,\n        hasScalableSrc,\n        offset,\n        targetHeight: loadedImgEl?.naturalHeight ?? imgRect.height,\n        targetWidth: loadedImgEl?.naturalWidth ?? imgRect.width,\n    });\n    const styleImgObjectFit = loadedImgEl && targetElComputedStyle.objectFit\n        ? getImgObjectFitStyle({\n            containerHeight: imgRect.height,\n            containerLeft: imgRect.left,\n            containerTop: imgRect.top,\n            containerWidth: imgRect.width,\n            hasScalableSrc,\n            objectFit: targetElComputedStyle.objectFit,\n            objectPosition: targetElComputedStyle.objectPosition,\n            offset,\n            targetHeight: loadedImgEl.naturalHeight,\n            targetWidth: loadedImgEl.naturalWidth,\n        })\n        : undefined;\n    const styleDivImg = loadedImgEl && testDiv(targetEl)\n        ? getDivImgStyle({\n            backgroundPosition: targetElComputedStyle.backgroundPosition,\n            backgroundSize: targetElComputedStyle.backgroundSize,\n            containerHeight: imgRect.height,\n            containerLeft: imgRect.left,\n            containerTop: imgRect.top,\n            containerWidth: imgRect.width,\n            hasScalableSrc,\n            offset,\n            targetHeight: loadedImgEl.naturalHeight,\n            targetWidth: loadedImgEl.naturalWidth,\n        })\n        : undefined;\n    const style = Object.assign({}, styleImgRegular, styleImgObjectFit, styleDivImg);\n    if (isZoomed) {\n        const viewportX = window.innerWidth / 2;\n        const viewportY = window.innerHeight / 2;\n        const childCenterX = parseFloat(String(style.left || 0)) + (parseFloat(String(style.width || 0)) / 2);\n        const childCenterY = parseFloat(String(style.top || 0)) + (parseFloat(String(style.height || 0)) / 2);\n        const translateX = viewportX - childCenterX;\n        const translateY = viewportY - childCenterY;\n        if (shouldRefresh) {\n            style.transitionDuration = '0.01ms';\n        }\n        style.transform = `translate(${translateX}px,${translateY}px) scale(1)`;\n    }\n    return style;\n};\nconst getStyleGhost = (imgEl) => {\n    if (!imgEl) {\n        return {};\n    }\n    if (testSvg(imgEl)) {\n        const parentEl = imgEl.parentNode;\n        const parentRect = parentEl?.getBoundingClientRect?.();\n        const rect = imgEl.getBoundingClientRect();\n        return {\n            height: rect.height,\n            left: parentRect.left - rect.left,\n            width: rect.width,\n            top: parentRect.top - rect.top,\n        };\n    }\n    else {\n        return {\n            height: imgEl.offsetHeight,\n            left: imgEl.offsetLeft,\n            width: imgEl.offsetWidth,\n            top: imgEl.offsetTop,\n        };\n    }\n};\n\nfunction Controlled(props) {\n    return React.createElement(ControlledBase, { ...props });\n}\nclass ControlledBase extends Component {\n    static defaultProps = {\n        a11yNameButtonUnzoom: 'Minimize image',\n        a11yNameButtonZoom: 'Expand image',\n        IconUnzoom: ICompress,\n        IconZoom: IEnlarge,\n        zoomMargin: 0,\n    };\n    state = {\n        id: '',\n        isZoomImgLoaded: false,\n        loadedImgEl: undefined,\n        modalState: 2,\n        shouldRefresh: false,\n    };\n    refContent = createRef();\n    refDialog = createRef();\n    refModalImg = createRef();\n    refWrap = createRef();\n    changeObserver;\n    imgEl = null;\n    imgElObserver;\n    styleModalImg = {};\n    render() {\n        const { handleDialogKeyDown, handleUnzoom, handleZoom, imgEl, props: { a11yNameButtonUnzoom, a11yNameButtonZoom, children, IconUnzoom, IconZoom, isZoomed, zoomImg, zoomMargin, }, refContent, refDialog, refModalImg, refWrap, state: { id, isZoomImgLoaded, loadedImgEl, modalState, shouldRefresh, }, } = this;\n        const idModalImg = `rmiz-modal-img-${id}`;\n        const isDiv = testDiv(imgEl);\n        const isImg = testImg(imgEl);\n        const isSvg = testSvg(imgEl);\n        const imgAlt = getImgAlt(imgEl);\n        const imgSrc = getImgSrc(imgEl);\n        const imgSizes = isImg ? imgEl.sizes : undefined;\n        const imgSrcSet = isImg ? imgEl.srcset : undefined;\n        const hasZoomImg = !!zoomImg?.src;\n        const hasImage = imgEl && (loadedImgEl || isSvg);\n        const labelBtnZoom = imgAlt\n            ? `${a11yNameButtonZoom}: ${imgAlt}`\n            : a11yNameButtonZoom;\n        const isModalActive = modalState === 1 ||\n            modalState === 0;\n        const dataContentState = hasImage ? 'found' : 'not-found';\n        const dataOverlayState = modalState === 2 || modalState === 3\n            ? 'hidden'\n            : 'visible';\n        const styleContent = {\n            visibility: modalState === 2 ? 'visible' : 'hidden',\n        };\n        const styleGhost = getStyleGhost(imgEl);\n        this.styleModalImg = hasImage\n            ? getStyleModalImg({\n                hasZoomImg,\n                imgSrc,\n                isSvg,\n                isZoomed: isZoomed && isModalActive,\n                loadedImgEl,\n                offset: zoomMargin,\n                shouldRefresh,\n                targetEl: imgEl,\n            })\n            : {};\n        return (React.createElement(\"div\", { \"data-rmiz\": \"\", ref: refWrap },\n            React.createElement(\"div\", { \"data-rmiz-content\": dataContentState, ref: refContent, style: styleContent }, children),\n            hasImage && React.createElement(\"div\", { \"data-rmiz-ghost\": \"\", style: styleGhost },\n                React.createElement(\"button\", { \"aria-label\": labelBtnZoom, \"data-rmiz-btn-zoom\": \"\", onClick: handleZoom, type: \"button\" },\n                    React.createElement(IconZoom, null))),\n            hasImage && React.createElement(\"dialog\", { \"aria-labelledby\": idModalImg, \"aria-modal\": \"true\", \"data-rmiz-modal\": \"\", ref: refDialog, onClick: handleUnzoom, onClose: handleUnzoom, onKeyDown: handleDialogKeyDown, role: \"dialog\" },\n                React.createElement(\"div\", { \"data-rmiz-modal-overlay\": dataOverlayState }),\n                React.createElement(\"div\", { \"data-rmiz-modal-content\": \"\" },\n                    (isImg || isDiv) && React.createElement(\"img\", { alt: imgAlt, sizes: imgSizes, src: imgSrc, srcSet: imgSrcSet, ...isZoomImgLoaded && modalState === 0 ? zoomImg : {}, \"data-rmiz-modal-img\": \"\", height: this.styleModalImg.height, id: idModalImg, ref: refModalImg, style: this.styleModalImg, width: this.styleModalImg.width }),\n                    isSvg && React.createElement(\"div\", { \"data-rmiz-modal-img\": \"\", ref: refModalImg, style: this.styleModalImg }),\n                    React.createElement(\"button\", { \"aria-label\": a11yNameButtonUnzoom, \"data-rmiz-btn-unzoom\": \"\", onClick: handleUnzoom, type: \"button\" },\n                        React.createElement(IconUnzoom, null))))));\n    }\n    componentDidMount() {\n        this.setId();\n        this.setAndTrackImg();\n        this.handleImgLoad();\n        this.UNSAFE_handleSvg();\n    }\n    componentWillUnmount() {\n        this.changeObserver?.disconnect?.();\n        this.imgElObserver?.disconnect?.();\n        this.imgEl?.removeEventListener?.('load', this.handleImgLoad);\n        this.imgEl?.removeEventListener?.('click', this.handleZoom);\n        window.removeEventListener('resize', this.handleResize);\n        window.removeEventListener('scroll', this.handleScroll);\n    }\n    componentDidUpdate(prevProps) {\n        this.UNSAFE_handleSvg();\n        this.handleIfZoomChanged(prevProps.isZoomed);\n    }\n    setId = () => {\n        const gen4 = () => Math.random().toString(16).slice(-4);\n        this.setState({ id: gen4() + gen4() + gen4() });\n    };\n    setAndTrackImg = () => {\n        const contentEl = this.refContent.current;\n        if (!contentEl)\n            return;\n        this.imgEl = contentEl.querySelector(':is(img, svg, [role=\"img\"], [data-zoom]):not([aria-hidden=\"true\"])');\n        if (this.imgEl) {\n            this.changeObserver?.disconnect?.();\n            this.imgEl?.addEventListener?.('load', this.handleImgLoad);\n            this.imgEl?.addEventListener?.('click', this.handleZoom);\n            if (!this.state.loadedImgEl) {\n                this.handleImgLoad();\n            }\n            this.imgElObserver = new ResizeObserver(entries => {\n                const entry = entries[0];\n                if (entry?.target) {\n                    this.imgEl = entry.target;\n                    this.setState({});\n                }\n            });\n            this.imgElObserver.observe(this.imgEl);\n        }\n        else if (!this.changeObserver) {\n            this.changeObserver = new MutationObserver(this.setAndTrackImg);\n            this.changeObserver.observe(contentEl, { childList: true, subtree: true });\n        }\n    };\n    handleIfZoomChanged = (prevIsZoomed) => {\n        const { isZoomed } = this.props;\n        if (!prevIsZoomed && isZoomed) {\n            this.zoom();\n        }\n        else if (prevIsZoomed && !isZoomed) {\n            this.unzoom();\n        }\n    };\n    handleImgLoad = () => {\n        const { imgEl } = this;\n        const imgSrc = getImgSrc(imgEl);\n        if (!imgSrc)\n            return;\n        const img = new Image();\n        if (testImg(imgEl)) {\n            img.sizes = imgEl.sizes;\n            img.srcset = imgEl.srcset;\n        }\n        img.src = imgSrc;\n        const setLoaded = () => {\n            this.setState({ loadedImgEl: img });\n        };\n        img\n            .decode()\n            .then(setLoaded)\n            .catch(() => { img.onload = setLoaded; });\n    };\n    handleZoom = () => {\n        this.props.onZoomChange?.(true);\n    };\n    handleUnzoom = () => {\n        this.props.onZoomChange?.(false);\n    };\n    handleDialogKeyDown = (e) => {\n        if (e.key === 'Escape' || e.keyCode === 27) {\n            e.preventDefault();\n            e.stopPropagation();\n            this.handleUnzoom();\n        }\n    };\n    handleScroll = () => {\n        this.setState({ shouldRefresh: true });\n        this.handleUnzoom();\n    };\n    handleResize = () => {\n        this.setState({ shouldRefresh: true });\n    };\n    zoom = () => {\n        const { handleResize, handleScroll, loadZoomImg, props: { scrollableEl = window, }, refDialog, refModalImg, } = this;\n        refDialog.current?.showModal?.();\n        this.setState({ modalState: 1 });\n        loadZoomImg();\n        refModalImg.current?.addEventListener?.('transitionend', () => {\n            setTimeout(() => {\n                this.setState({ modalState: 0 });\n                scrollableEl.addEventListener('scroll', handleScroll);\n                window.addEventListener('resize', handleResize);\n            }, 0);\n        }, { once: true });\n    };\n    unzoom = () => {\n        const { handleResize, handleScroll, refDialog, refModalImg, props: { scrollableEl = window }, } = this;\n        this.setState({ modalState: 3 });\n        refModalImg.current?.addEventListener?.('transitionend', () => {\n            setTimeout(() => {\n                window.removeEventListener('resize', handleResize);\n                scrollableEl.removeEventListener('scroll', handleScroll);\n                this.setState({\n                    shouldRefresh: false,\n                    modalState: 2,\n                });\n                refDialog.current?.close?.();\n            }, 0);\n        }, { once: true });\n    };\n    loadZoomImg = () => {\n        const { props: { zoomImg } } = this;\n        const zoomImgSrc = zoomImg?.src;\n        if (zoomImgSrc) {\n            const img = new Image();\n            img.sizes = zoomImg?.sizes ?? '';\n            img.srcset = zoomImg?.srcSet ?? '';\n            img.src = zoomImgSrc;\n            const setLoaded = () => {\n                this.setState({ isZoomImgLoaded: true });\n            };\n            img\n                .decode()\n                .then(setLoaded)\n                .catch(() => { img.onload = setLoaded; });\n        }\n    };\n    UNSAFE_handleSvg = () => {\n        const { imgEl, refModalImg, styleModalImg } = this;\n        if (testSvg(imgEl)) {\n            const tmp = document.createElement('div');\n            tmp.innerHTML = imgEl.outerHTML;\n            const svg = tmp.firstChild;\n            svg.style.width = `${styleModalImg.width ?? 0}px`;\n            svg.style.height = `${styleModalImg.height ?? 0}px`;\n            refModalImg.current?.firstChild?.remove?.();\n            refModalImg.current?.appendChild?.(svg);\n        }\n    };\n}\n\nfunction Uncontrolled(props) {\n    const [isZoomed, setIsZoomed] = useState(false);\n    return React.createElement(Controlled, { ...props, isZoomed: isZoomed, onZoomChange: setIsZoomed });\n}\n\nexport { Controlled, Uncontrolled as default };\n"]},"metadata":{},"sourceType":"module"}